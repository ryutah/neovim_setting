{
  "coc.preferences.formatOnSave": true,
  "coc.preferences.formatOnType": true,
  "go.goplsOptions": {
    "usePlaceholders": true,
    "gofumpt": true,
    "completeUnimported": true
  },
  "json.format.enable": false,
  "yaml.format.enable": false,
  "yaml.completion": true,
  "yaml.schemas": {
    "kubernetes": [
      "k8s.yaml",
      "k8s/**/*.yaml",
      "k8s.yml",
      "k8s/**/*.yml",
      "k8s/*.yaml",
      "k8s/*.yml"
    ],
    "https://raw.githubusercontent.com/OAI/OpenAPI-Specification/main/schemas/v3.0/schema.json": [
      "openapi.yaml",
      "openapi.yml"
    ],
    "https://json.schemastore.org/golangci-lint.json": [
      ".golangci.yml",
      ".golangci.yaml"
    ]
  },
  "snippets.ultisnips.enable": true,
  "languageserver": {
    "golangci-lint-languageserver": {
      "command": "golangci-lint-langserver",
      "filetypes": ["go"],
      "initializationOptions": {
        "command": [
          "golangci-lint",
          "run",
          "--out-format",
          "json",
          "-E",
          "gosec",
          "-E",
          "bodyclose",
          "-E",
          "misspell",
          "-E",
          "gocritic"
        ]
      }
    },
    "terraform": {
      "command": "terraform-ls",
      "args": ["serve"],
      "filetypes": ["terraform", "tf"],
      "initializationOptions": {},
      "settings": {}
    }
  },
  "diagnostic-languageserver.filetypes": {
    "javascript": ["eslint"],
    "typescript": ["eslint"],
    "vue": ["eslint"],
    "markdown": ["markdownlint"],
    "proto": ["buf"],
    "fish": ["fish_indent"],
    "terraform": ["tflint"]
  },
  "diagnostic-languageserver.formatFiletypes": {
    "javascript": "prettier_js",
    "typescript": "prettier_js",
    "typescriptreact": "prettier_js",
    "json": "prettier",
    "jsonc": "prettier",
    "yaml": "prettier",
    "yaml.docker-compose": "prettier",
    "html": "prettier",
    "css": "prettier",
    "sh": "shfmt",
    "markdown": "prettier",
    "fish": "fish_indent",
    "proto": "buf",
    "terraform": "terraform"
  },
  "diagnostic-languageserver.linters": {
    "markdownlint": {
      "command": "markdownlint",
      "isStderr": true,
      "debounce": 100,
      "args": ["--stdin"],
      "offsetLine": 0,
      "offsetColumn": 0,
      "sourceName": "markdownlint",
      "formatLines": 1,
      "formatPattern": [
        "^.*?:(\\d+):(\\d)\\s+(.*)(\\r|\\n)*$",
        {
          "line": 1,
          "column": 2,
          "message": 3
        }
      ]
    },
    "buf": {
      "command": "buf",
      "rootPatterns": ["buf.yaml"],
      "debounce": 100,
      "args": ["lint", "%filepath"],
      "offsetLine": 0,
      "offsetColumn": 0,
      "sourceName": "buf",
      "formatLines": 1,
      // proto/pet/v1/pet.proto:37:9:Service name "PetStore" should be suffixed with "Service".
      "formatPattern": [
        "^.*?:(\\d+):(\\d):(.*)$",
        {
          "line": 1,
          "column": 2,
          "message": 3
        }
      ]
    },
    "tflint": {
      "command": "tflint",
      "rootPatterns": [".tflint.hcl"],
      "debounce": 100,
      "args": ["-f", "sarif", "--filter", "%filename"],
      "sourceName": "tflint",
      "parseJson": {
        "errorsRoot": "runs[0].results",
        "line": "locations[0].physicalLocation.region.startLine",
        "column": "locations[0].physicalLocation.region.startColumn",
        "endLine": "locations[0].physicalLocation.region.endLine",
        "endColumn": "locations[0].physicalLocation.region.endColumn",
        "message": "[tflint] ${message.text} [${ruleId}]",
        "security": "level"
      },
      "securities": {
        "error": "error",
        "warning": "warning"
      }
    }
  },
  "diagnostic-languageserver.formatters": {
    "prettier_js": {
      "command": "prettier",
      "args": [
        "--stdin",
        "--config-precedence",
        "prefer-file",
        "--trailing-comma",
        "es5",
        "--arrow-parens",
        "always",
        "--stdin-filepath",
        "%filename"
      ],
      "rootPatterns": [
        ".prettierrc",
        ".prettierrc.json",
        ".prettierrc.toml",
        ".prettierrc.json",
        ".prettierrc.yml",
        ".prettierrc.yaml",
        ".prettierrc.json5",
        ".prettierrc.js",
        ".prettierrc.cjs",
        "prettier.config.js",
        "prettier.config.cjs"
      ]
    },
    "prettier": {
      "command": "xprettier",
      "args": ["--stdin", "--stdin-filepath", "%filename"],
      "rootPatterns": [
        ".prettierrc",
        ".prettierrc.json",
        ".prettierrc.toml",
        ".prettierrc.json",
        ".prettierrc.yml",
        ".prettierrc.yaml",
        ".prettierrc.json5",
        ".prettierrc.js",
        ".prettierrc.cjs",
        "prettier.config.js",
        "prettier.config.cjs"
      ]
    },
    "shfmt": {
      "command": "shfmt"
    },
    "fish_indent": {
      "command": "fish_indent"
    },
    "buf": {
      "command": "buf",
      "args": ["format", "%filepath"],
      "rootPatterns": ["buf.yaml"]
    },
    "terraform": {
      "command": "terraform",
      "args": ["fmt", "-"]
    }
  },
  "sqlfluff.lintOnChange": false,
  "python.formatting.autopep8Path": "~/.asdf/shims/autopep8",
  "python.formatting.blackPath": "~/.asdf/shims/black",
  "rust-analyzer.procMacro.enable": true,
  "rust-analyzer.check.command": "clippy",
  "rust-analyzer.check.extraArgs": ["--tests"],
  "Lua.diagnostics.globals": ["vim"]
}
