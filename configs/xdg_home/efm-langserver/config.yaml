# check :h errorformat to see linters format config

version: 2
root-markers:
  - .git/
tools:
  # refs
  #   - https://github.com/mattn/efm-langserver/blob/master/README.md
  prettierd: &prettierd
    format-stdin: true
    # 追加 Option つけると .prettierrc とかの設定読み込まないので追加 Option はつけない
    # INPUT をシングルクォートで囲まないと、() などを含むディレクトリ ( Next.js app router など ) で正しくファイル
    # パスが認識されない
    format-command: >
      prettierd '${INPUT}'
    root-markers:
      - .prettierrc
      - .prettierrc.json
      - .prettierrc.js
      - .prettierrc.yml
      - .prettierrc.yaml
      - .prettierrc.json5
      - .prettierrc.mjs
      - .prettierrc.cjs
      - .prettierrc.toml

  sql_formatter: &sql_formatter
    format-stdin: true
    format-command: >
      if [ -e sql_formatter.json ]; then
        sql-formatter -c sql_formatter.json
      elif [ -e .sql_formatter.json ]; then
        sql-formatter -c .sql_formatter.json
      else
        sql-formatter
      fi
    root-markers:
      - sql_formatter.json
      - .sql_formatter.json

  # NOTE:
  # sqlc などの、標準の SQL ではない場合にエラーが発生するため sql_formatter を代わりに利用
  sqlfmt: &sqlfmt
    format-stdin: true
    format-command: >
      sqlfmt -

  shfmt: &shfmt
    format-stdin: true
    format-command: >
      shfmt -i 2

  # refs
  #   - https://www.reddit.com/r/neovim/comments/168vo47/how_to_integrate_sqlfluff_with_efmserver/
  sqlfluff: &sqlfluff
    lint-on-save: true
    lint-ignore-exit-code: true
    lint-command: >
      sqlfluff lint \
        --dialect ansi \
        --format github-annotation-native \
        --annotation-level warning \
        --nocolor \
        --disable-progress-bar \
        -e LT09,AM04
        ${INPUT}
    lint-formats:
      - "::%totice title=SQLFluff,file=%f,line=%l,col=%c::%m"
      - "::%tarning title=SQLFluff,file=%f,line=%l,col=%c::%m"
      - "::%trror title=SQLFluff,file=%f,line=%l,col=%c::%m"
    root-markers:
      - .sqlfluff

  # refs
  #   - message format
  #     - https://github.com/terraform-linters/tflint/blob/1d58c87ecb3ca18f13ac2e3c96cdad5be3e02354/formatter/compact.go#L19
  #   - error type
  #     - https://github.com/terraform-linters/tflint-plugin-sdk/blob/6c5fee70bd178b27b84e2e114f9be745572575b3/tflint/issue.go#L6
  tflint: &tflint
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-command: >
      tflint --recursive --format compact
    lint-formats:
      - "%f:%l:%c: %trror - %m"
      - "%f:%l:%c: %tarning - %m"
      - "%f:%l:%c: %totice - %m"
    root-markers:
      - .tflint.hcl

  # sample message
  #   sample.md:3 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: "* aaa"]
  #   sample.md:4:1 MD004/ul-style Unordered list style [Expected: asterisk; Actual: dash]
  #   sample.md:4:1 MD007/ul-indent Unordered list indentation [Expected: 0; Actual: 1]
  #   sample.md:4 MD032/blanks-around-lists Lists should be surrounded by blank lines [Context: "- aaabb"]
  markdownlint: &markdownlint
    lint-stdin: false
    lint-ignore-exit-code: true
    lint-severity: 3
    lint-command: >
      markdownlint ${INPUT}
    lint-formats:
      - "%f:%l %m"
      - "%f:%l:%c %m"
      - "%f: %l: %m"
    root-markers:
      - .markdownlint.jsonc
      - .markdownlint.json
      - .markdownlint.yaml
      - .markdownlint.yml
      - .markdownlintrc

  # refs
  #   - https://github.com/mattn/efm-langserver
  dockerfile_hadolint: &dockerfile_hadolint
    lint-command: "hadolint --no-color "
    lint-severity: 2
    lint-formats:
      - "%f:%l %m"

  # sample error message
  #   ::error file=proto/todo.proto,line=4,col=3,end::error file=proto/todo.proto::Files must have a package defined.Line=4,endColumn=3::syntax error: unexpected "string", expecting '{'
  #    ::error file=proto/todo.proto::Files must have a package defined.
  buf_lint: &buf_lint
    prefix: buf
    lint-stdin: false
    lint-command: >
      buf lint --error-format github-actions ${INPUT}
    lint-formats:
      - "::%totice file=%f,line=%l,col=%c,endLine=%e,endColumn=%k::%m"
      - "::%tarning file=%f,line=%l,col=%c,endLine=%e,endColumn=%k::%m"
      - "::%trror file=%f,line=%l,col=%c,endLine=%e,endColumn=%k::%m"
      - "::%totice file=%f::%m"
      - "::%tarning file=%f::%m"
      - "::%trror file=%f::%m"
    root-markers:
      - buf.yaml

  python-black: &python_black
    format-stdin: true
    format-command: >
      black --quiet -
  cspell_lint: &cspell_lint
    lint-command: cspell
    lint-severity: 4
    lint-formats:
      - "%f:%l:%c - %m"

languages:
  javascript:
    - <<: *prettierd
  javascriptreact:
    - <<: *prettierd
  javascript.jsx":
    - <<: *prettierd
  typescript:
    - <<: *prettierd
  typescriptreact:
    - <<: *prettierd
  typescript.tsx:
    - <<: *prettierd
  json:
    - <<: *prettierd
  yaml:
    - <<: *prettierd
  html:
    - <<: *prettierd
  css:
    - <<: *prettierd
  markdown:
    - <<: *prettierd
    - <<: *markdownlint
  sql:
    - <<: *sql_formatter
    # - <<: *sqlfluff
  terraform:
    - <<: *tflint
  terraform-vars:
    - <<: *tflint
  sh:
    - <<: *shfmt
  dockerfile:
    - <<: *dockerfile_hadolint
  proto:
    - <<: *buf_lint
  python:
    - <<: *python_black
  =:
    - <<: *cspell_lint
